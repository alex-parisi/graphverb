name: PR Check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release
  TARGET_NAME: juce_cmake_plugin

jobs:
  build-macos:
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          brew install cmake ninja

      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -G Ninja -B build -S .

      - name: Build
        run: cmake --build build --target ${{ env.TARGET_NAME }}_All -j

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Ninja
        run: choco install ninja

      - name: Set up MSVC Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure with MSVC
        run: cmake -DCMAKE_BUILD_TYPE=Release -G "Ninja" -B build -S .

      - name: Build
        run: cmake --build build --target ${{ env.TARGET_NAME }}_All -j

  build-linux:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            cmake ninja-build build-essential \
            libasound2-dev libjack-jackd2-dev \
            libx11-dev libfreetype6-dev libfontconfig1-dev \
            libgl1-mesa-dev libcurl4-openssl-dev \
            libxrandr-dev libxinerama-dev libxcursor-dev \
            libxcomposite-dev libxext-dev \
            libgtk2.0-dev

      - name: Configure
        run: |
          cmake -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
                -DCMAKE_EXE_LINKER_FLAGS="-lcurl" \
                -G Ninja -B build -S .

      - name: Build
        run: cmake --build build --target ${{ env.TARGET_NAME }}_All -j
